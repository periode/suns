services:
  db_test_suns:
    image: postgres:alpine
    user: postgres
    container_name: db_test_suns
    environment:
      POSTGRES_USER: suns
      POSTGRES_PASSWORD: suns
      POSTGRES_DB: suns-test
      PGPORT: "5432"
    expose:
      - "5432"
    volumes:
      - pgdata_suns_test:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U suns -d suns-test && psql -U suns suns-test"
        ]
      interval: 5s
      timeout: 3s
      retries: 10

  backend_test_suns:
    container_name: backend_test_suns
    build: .
    depends_on:
      db_test_suns:
        condition: service_healthy
    ports:
      - ${PORT}:${PORT}
    env_file:
      - ./.secrets
    environment:
      DATABASE_URL: "postgres://suns:suns@db_test_suns:5432/suns-test"
      DATABASE_TEST_URL: "postgres://suns:suns@db_test_suns:5432/suns-test"
      PORT: "3046"
      DB_USER: "suns"
      DB_PASSWORD: "suns"
      DB_HOST: "db_test_suns"
      DB_PORT: "5432"
      DB_NAME: "suns-test"
      DEBUG: "false"
      API_MODE: "debug"
      RUN_FIXTURES: "true"
    tmpfs:
      - /tmp

  front_test_suns:
    container_name: front_test_suns
    depends_on:
      - backend_test_suns
    build:
      context: .
      dockerfile: Dockerfront
    ports:
      - "3000:80"
    restart: always
    environment:
      REACT_APP_API_URL: http://backend_test_suns:3046


volumes:
  pgdata_suns_test:
